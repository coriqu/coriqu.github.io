{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport { Tag, useClassNames, createComponent } from '@rmwc/base';\n/** The root of the Image List. */\n\nexport var ImageList = createComponent(function ImageList(props, ref) {\n  var masonry = props.masonry,\n      withTextProtection = props.withTextProtection,\n      rest = __rest(props, [\"masonry\", \"withTextProtection\"]);\n\n  var className = useClassNames(props, ['mdc-image-list', {\n    'mdc-image-list--masonry': masonry,\n    'mdc-image-list--with-text-protection': withTextProtection\n  }]);\n  return React.createElement(Tag, __assign({\n    tag: \"ul\"\n  }, rest, {\n    ref: ref,\n    className: className\n  }));\n});\n/** Indicates each item in an Image List. */\n\nexport var ImageListItem = createComponent(function ImageListItem(props, ref) {\n  var className = useClassNames(props, ['mdc-image-list__item']);\n  return React.createElement(Tag, __assign({\n    tag: \"li\"\n  }, props, {\n    ref: ref,\n    className: className\n  }));\n});\n/** Optional. Parent of each item’s image element, responsible for constraining aspect ratio. This element may be omitted entirely if images are already sized to the correct aspect ratio. */\n\nexport var ImageListImageAspectContainer = createComponent(function ImageListImageAspectContainer(props, ref) {\n  var className = useClassNames(props, ['mdc-image-list__image-aspect-container']);\n  return React.createElement(Tag, __assign({}, props, {\n    ref: ref,\n    className: className\n  }));\n});\n/** Indicates the image element in each item. */\n\nexport var ImageListImage = createComponent(function ImageListImage(props, ref) {\n  var className = useClassNames(props, ['mdc-image-list__image']);\n  return React.createElement(Tag, __assign({\n    tag: \"img\"\n  }, props, {\n    ref: ref,\n    className: className\n  }));\n});\n/** Optional. Indicates the area within each item containing the supporting text label, if the Image List contains text labels. */\n\nexport var ImageListSupporting = createComponent(function ImageListSupporting(props, ref) {\n  var className = useClassNames(props, ['mdc-image-list__supporting']);\n  return React.createElement(Tag, __assign({}, props, {\n    ref: ref,\n    className: className\n  }));\n});\n/** Optional. Indicates the text label in each item, if the Image List contains text labels. */\n\nexport var ImageListLabel = createComponent(function ImageListLabel(props, ref) {\n  var className = useClassNames(props, ['mdc-image-list__label']);\n  return React.createElement(Tag, __assign({}, props, {\n    ref: ref,\n    className: className\n  }));\n});","map":{"version":3,"sources":["/Users/cori/Desktop/2020/coriqu/coriqu.github.io/node_modules/@rmwc/image-list/next/index.js"],"names":["__assign","__rest","React","Tag","useClassNames","createComponent","ImageList","props","ref","masonry","withTextProtection","rest","className","createElement","tag","ImageListItem","ImageListImageAspectContainer","ImageListImage","ImageListSupporting","ImageListLabel"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport { Tag, useClassNames, createComponent } from '@rmwc/base';\n/** The root of the Image List. */\nexport var ImageList = createComponent(function ImageList(props, ref) {\n    var masonry = props.masonry, withTextProtection = props.withTextProtection, rest = __rest(props, [\"masonry\", \"withTextProtection\"]);\n    var className = useClassNames(props, [\n        'mdc-image-list',\n        {\n            'mdc-image-list--masonry': masonry,\n            'mdc-image-list--with-text-protection': withTextProtection\n        }\n    ]);\n    return React.createElement(Tag, __assign({ tag: \"ul\" }, rest, { ref: ref, className: className }));\n});\n/** Indicates each item in an Image List. */\nexport var ImageListItem = createComponent(function ImageListItem(props, ref) {\n    var className = useClassNames(props, ['mdc-image-list__item']);\n    return React.createElement(Tag, __assign({ tag: \"li\" }, props, { ref: ref, className: className }));\n});\n/** Optional. Parent of each item’s image element, responsible for constraining aspect ratio. This element may be omitted entirely if images are already sized to the correct aspect ratio. */\nexport var ImageListImageAspectContainer = createComponent(function ImageListImageAspectContainer(props, ref) {\n    var className = useClassNames(props, [\n        'mdc-image-list__image-aspect-container'\n    ]);\n    return React.createElement(Tag, __assign({}, props, { ref: ref, className: className }));\n});\n/** Indicates the image element in each item. */\nexport var ImageListImage = createComponent(function ImageListImage(props, ref) {\n    var className = useClassNames(props, ['mdc-image-list__image']);\n    return React.createElement(Tag, __assign({ tag: \"img\" }, props, { ref: ref, className: className }));\n});\n/** Optional. Indicates the area within each item containing the supporting text label, if the Image List contains text labels. */\nexport var ImageListSupporting = createComponent(function ImageListSupporting(props, ref) {\n    var className = useClassNames(props, ['mdc-image-list__supporting']);\n    return React.createElement(Tag, __assign({}, props, { ref: ref, className: className }));\n});\n/** Optional. Indicates the text label in each item, if the Image List contains text labels. */\nexport var ImageListLabel = createComponent(function ImageListLabel(props, ref) {\n    var className = useClassNames(props, ['mdc-image-list__label']);\n    return React.createElement(Tag, __assign({}, props, { ref: ref, className: className }));\n});\n"]},"metadata":{},"sourceType":"module"}