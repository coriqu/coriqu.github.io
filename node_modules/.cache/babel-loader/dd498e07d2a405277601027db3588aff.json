{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cori/Desktop/2020/coriqu/coriqu.github.io/src/components/Button/ScrollToTopBtn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport classes from './ScrollToTopBtn.css';\n\nconst ScrollToTopBtn = () => {\n  _s();\n\n  const [btnStatus, setbtnStatus] = useState(false);\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      const pageOffset = window.pageYOffset; // console.log(pageOffset);\n\n      if (pageOffset > 1000) {\n        console.log(true);\n        setbtnStatus(true);\n      } else {\n        console.log(false);\n        setbtnStatus(false);\n      }\n\n      const progressPath = document.querySelector('.progress-wrap path');\n      const pathLength = progressPath ? progressPath.getTotalLength() : 0; // progressPath.style.transition = progressPath.style.WebkitTransition = 'none';\n\n      if (progressPath) {\n        progressPath.style.strokeDasharray = pathLength + ' ' + pathLength;\n        progressPath.style.strokeDashoffset = pathLength;\n        progressPath.getBoundingClientRect();\n        progressPath.style.transition = progressPath.style.WebkitTransition = 'stroke-dashoffset 10ms linear';\n        updateProgress(progressPath, pathLength);\n      }\n    });\n  }, []);\n\n  const updateProgress = (progressPath, pathLength) => {\n    var scroll = window.pageYOffset;\n    var height = document.documentElement.scrollHeight - window.innerHeight; // console.log(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.clientHeight,window.innerHeight);\n\n    var progress = pathLength - scroll * pathLength / height;\n    console.log(scroll, height, progress);\n    progressPath.style.strokeDashoffset = progress;\n  };\n\n  const goToTop = () => {\n    var scrollOptions = {\n      left: 0,\n      top: 0,\n      behavior: 'smooth'\n    };\n    window.scrollTo(scrollOptions);\n    return setbtnStatus(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: btnStatus ? \"progress-wrap active-progress\" : \"progress-wrap\",\n    onClick: goToTop,\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      class: \"progress-circle svg-content\",\n      width: \"100%\",\n      height: \"100%\",\n      viewBox: \"-1 -1 102 102\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M50,1 a49,49 0 0,1 0,98 a49,49 0 0,1 0,-98\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      class: \"svg-icon\",\n      viewBox: \"0 0 20 20\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M18.271,9.212H3.615l4.184-4.184c0.306-0.306,0.306-0.801,0-1.107c-0.306-0.306-0.801-0.306-1.107,0 L1.21,9.403C1.194,9.417,1.174,9.421,1.158,9.437c-0.181,0.181-0.242,0.425-0.209,0.66c0.005,0.038,0.012,0.071,0.022,0.109 c0.028,0.098,0.075,0.188,0.142,0.271c0.021,0.026,0.021,0.061,0.045,0.085c0.015,0.016,0.034,0.02,0.05,0.033l5.484,5.483 c0.306,0.307,0.801,0.307,1.107,0c0.306-0.305,0.306-0.801,0-1.105l-4.184-4.185h14.656c0.436,0,0.788-0.353,0.788-0.788 S18.707,9.212,18.271,9.212z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ScrollToTopBtn, \"wYvKqCBoRLluYUv9kpCjhi3TF90=\");\n\n_c = ScrollToTopBtn;\nexport default ScrollToTopBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollToTopBtn\");","map":{"version":3,"sources":["/Users/cori/Desktop/2020/coriqu/coriqu.github.io/src/components/Button/ScrollToTopBtn.js"],"names":["React","useState","useEffect","classes","ScrollToTopBtn","btnStatus","setbtnStatus","window","addEventListener","pageOffset","pageYOffset","console","log","progressPath","document","querySelector","pathLength","getTotalLength","style","strokeDasharray","strokeDashoffset","getBoundingClientRect","transition","WebkitTransition","updateProgress","scroll","height","documentElement","scrollHeight","innerHeight","progress","goToTop","scrollOptions","left","top","behavior","scrollTo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classes from './ScrollToTopBtn.css';\nconst ScrollToTopBtn = () => {\n\tconst [btnStatus, setbtnStatus] = useState(false);\n\t\n\tuseEffect(()=>{\n\t\twindow.addEventListener('scroll', () => {\n\t\t\tconst pageOffset = window.pageYOffset;\n\t\t\t// console.log(pageOffset);\n\t\t\tif(pageOffset>1000) {\n\t\t\t\tconsole.log(true);\n\t\t\t\tsetbtnStatus(true);\n\t\t\t} else {\n\t\t\t\tconsole.log(false);\n\t\t\t\tsetbtnStatus(false);\n\t\t\t}\n\t\t\tconst progressPath = document.querySelector('.progress-wrap path');\n\t\t\tconst pathLength = progressPath?progressPath.getTotalLength():0;\n\t\t\t// progressPath.style.transition = progressPath.style.WebkitTransition = 'none';\n\t\t\tif(progressPath) {\n\t\t\t\tprogressPath.style.strokeDasharray = pathLength + ' ' + pathLength;\n\t\t\t\tprogressPath.style.strokeDashoffset = pathLength;\n\t\t\t\tprogressPath.getBoundingClientRect();\n\t\t\t\tprogressPath.style.transition = progressPath.style.WebkitTransition = 'stroke-dashoffset 10ms linear';\t\n\t\t\t\tupdateProgress(progressPath, pathLength);\n\t\t\t}\n\t\t})\n\n\t},[])\n\tconst updateProgress = (progressPath, pathLength) => {\n\t\tvar scroll = window.pageYOffset;\n\t\tvar height = document.documentElement.scrollHeight - window.innerHeight;\n\t\t// console.log(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.clientHeight,window.innerHeight);\n\t\tvar progress = pathLength - (scroll * pathLength / height);\n\t\tconsole.log(scroll,height,progress);\n\t\tprogressPath.style.strokeDashoffset = progress;\n\t}\n\tconst goToTop = () => {\n\t\tvar scrollOptions = {\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\tbehavior: 'smooth'\n\t\t}\n\t\twindow.scrollTo(scrollOptions)\n\t\treturn setbtnStatus(false);\n\t}\n\n\n\treturn (\n    <div class={btnStatus?(\"progress-wrap active-progress\"):(\"progress-wrap\")} onClick={goToTop}>\n\t\t<svg class=\"progress-circle svg-content\" width=\"100%\" height=\"100%\" viewBox=\"-1 -1 102 102\">\n\t\t\t<path d=\"M50,1 a49,49 0 0,1 0,98 a49,49 0 0,1 0,-98\"/>\n\t\t</svg>\n\t\t<svg class=\"svg-icon\" viewBox=\"0 0 20 20\">\n\t\t\t<path d=\"M18.271,9.212H3.615l4.184-4.184c0.306-0.306,0.306-0.801,0-1.107c-0.306-0.306-0.801-0.306-1.107,0\n\t\t\tL1.21,9.403C1.194,9.417,1.174,9.421,1.158,9.437c-0.181,0.181-0.242,0.425-0.209,0.66c0.005,0.038,0.012,0.071,0.022,0.109\n\t\t\tc0.028,0.098,0.075,0.188,0.142,0.271c0.021,0.026,0.021,0.061,0.045,0.085c0.015,0.016,0.034,0.02,0.05,0.033l5.484,5.483\n\t\t\tc0.306,0.307,0.801,0.307,1.107,0c0.306-0.305,0.306-0.801,0-1.105l-4.184-4.185h14.656c0.436,0,0.788-0.353,0.788-0.788\n\t\t\tS18.707,9.212,18.271,9.212z\"></path>\n\t\t</svg>\n\t</div>\n)}\nexport default ScrollToTopBtn;\n\n\n"]},"metadata":{},"sourceType":"module"}